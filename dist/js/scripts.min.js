/* eslint-disable no-undef */
// eslint-disable-next-line no-unused-vars
!function(){var $pokemonList=$('.main-content_pokemon-list');function isObject(item){return null!=item&&'object'==typeof item}function isObjectEqual(original,clone){var originalProperties=Object.keys(original),cloneProperties=Object.keys(clone);if(!isPropertyCountEqual(originalProperties,cloneProperties))return!1;for(var i=0;i<originalProperties.length;i++)if(originalProperties[i]!==cloneProperties[i])return!1;return!0}function isPropertyCountEqual(originalProperties,cloneProperties){return originalProperties.length===cloneProperties.length}function Pokemon(name,detailsUrl){this.name=name,this.details={},this.detailsUrl=detailsUrl}var modalBox=function(){var $modalLabel=$('#exampleModalLabel'),$modalContent=$('.modal-body');function show(pokemon){$modalLabel&&$modalContent&&($modalLabel.empty(),setModalContent(pokemon))}function setModalContent(pokemon){pokemon&&($modalContent.empty(),addTitle(pokemon),addImage(pokemon.details),addInfos(pokemon.details))}function addTitle(pokemon){$modalLabel.text(pokemon.name)}function addImage(pokemonDetails){$modalContent.append(`<img src="${pokemonDetails.sprites.front_default}" alt="The front view of ${pokemonDetails.species.name}" class="modal_image img-fluid">`)}function addInfos(pokemonDetails){$modalContent.append('<div class="modal_text-container"></div>'),$textContainer=$('.modal_text-container'),Object.keys(pokemonDetails).forEach(p=>{Array.isArray(pokemonDetails[p])||isObject(pokemonDetails[p])||addInfoElement(pokemonDetails,p,$textContainer)})}function addInfoElement(pokemonDetails,property,$textContainer){$textContainer.append(`<p class="text-container_item">${property}: ${pokemonDetails[property]}</p>`)}return{show:show}}(),pokemonRepository;(function(){var repository=[],apiUrl='https://pokeapi.co/api/v2/pokemon/?limit=150';function renderPokemonCards(){loadList().then(()=>{repository.forEach(p=>{addItemButton(p)})})}function loadList(){return $.ajax(apiUrl,{dataType:'json'}).then(res=>{res.results.forEach(r=>add(new Pokemon(r.name,r.url))),addSearchFunctionality()}).catch(err=>console.log(err))}function addSearchFunctionality(){var $searchBar=$('.search_bar'),$searchSubmit=$('.search_submit');$searchBar&&$searchSubmit&&($searchSubmit.on('click',e=>{e.preventDefault(),$searchBar.val()&&showFound($searchBar.val(),$searchBar)}),$searchBar.on('keydown',e=>{13===e.keyCode&&showFound(e.target.value,$searchBar)}))}function showFound(filter,$searchBar){if(filter&&$searchBar){var pokemonFound=getFiltered(filter).shift();pokemonFound?$(`#${pokemonFound.name}`).click():showNotFoundMessage($searchBar)}}function showNotFoundMessage($searchBar){$searchBar&&($searchBar.parent().append('<p class=\'not-found-message\'>Pok√©mon not found.<p>'),setTimeout(()=>{$('.not-found-message').remove()},1e3))}function add(pokemon){isPokemon(pokemon)&&repository.push(pokemon)}function getAll(){return repository}function getFiltered(filter){return filter?repository.filter(c=>String(Object.values(c)).toLowerCase().includes(String(filter).toLowerCase())):[]}function remove(pokemon){isPokemon(pokemon)&&repository.splice(repository.indexOf(pokemon),1)}function isPokemon(item){return isObject(item)&&isObjectEqual(item,new Pokemon)}function addItemButton(pokemon){$pokemonList.append(`<button id="${pokemon.name}" class="list-group-item list-group-item-dark list-group-item-action" data-toggle="modal" data-target="#exampleModal" role="listitem">${pokemon.name}</button>`),addItemButtonEvent(pokemon)}function addItemButtonEvent(pokemon){var $itemButton;$(`#${pokemon.name}`).on('click',e=>{e.preventDefault(),showDetails(pokemon)})}function showDetails(pokemon){isPokemon(pokemon)&&loadDetails(pokemon).then(()=>modalBox.show(pokemon))}function loadDetails(pokemon){return $.ajax(pokemon.detailsUrl,{dataType:'json'}).then(res=>{pokemon.details=JSON.parse(JSON.stringify(res))}).catch(err=>console.log(err))}return{add:add,getAll:getAll,getFiltered:getFiltered,remove:remove,renderPokemonCards:renderPokemonCards}})().renderPokemonCards()}();